/****************************************************************
** Data loading information
****************************************************************/
// Data loading path
fpath = "clean-data/";

// Filename
fname = "reg_cab_data.csv";

// Results saving paths
save_on = 1;
spath = "data/";
sfile1 = "cab_pct_annual.gdat";

// Variables of interest
group_var = "cn";
group_names = "country_name";
datevar = "Date";
interestvar = "pct_cab";

// Load data
reg_data = loadd(fpath$+fname);
reg_data  = asdate(move(reg_data ), "%Y-Q%q", datevar);

// Generate Year variable
reg_data = selif(reg_data, reg_data[., interestvar] .!= miss());
Year = dtYear(reg_data[., datevar]);
Year = asDate(Year, "%Y");

// Merge with existing reg data
reg_data = Year~reg_data;
reg_data = dfname(move(reg_data), "Year", "X1");


/****************************************************************
** Aggregating annually
****************************************************************/
// Get unique years
Year_uniq = unique(reg_data[., "Year"]);

// Get unique country codes
ccodes = unique(reg_data[., group_var]);

// Get column labels
{ cnames, keys } = getColLabels(reg_data, group_names);
N_groups = rows(cnames);

// Storage matrix
cab_wide = Year_uniq;

for i(1, N_groups, 1);
    
    // Select data for country
    tmp = __get_test_y_with_year(reg_data, cnames[i], group_names, group_var, datevar, interestvar);
    
    // Now aggregate 
    tmp = aggregate(tmp, "mean", "Year", 1);
    
    // Convert to DF
    tmp = dfname(move(tmp), "cab_"$+cnames[i], interestvar);
 
    // Now merge with storage matrix
    cab_wide = outerJoin(cab_wide, "Year", tmp, "Year", "full");
    
endfor;

// Reshape to long data
columns = trimr(getColNames(cab_wide), 1, 0);

// Declare 'pctl' to be a pivotControl structure
// and fill with default settings
struct pivotControl pctl;
pctl = pivotControlCreate();

// Split the variable names from 'columns', 
// every time an underscore is encountered
pctl.names_prefix = "cab_";

// Set to drop missings
pctl.values_drop_missing = 1;

// Set variable names for the new columns
names_to = group_names;

// Set name of value column
values_to = "Pct CAB";

cab_long = dfLonger(cab_wide, columns, names_to, values_to, pctl);

// Sort data
cab_long = sortc(cab_long, group_names$|"Year");
if save_on;
    saved(cab_long, spath$+sfile1);
endif;

proc (1) = __get_test_y_with_year(data, cname, ...);
    local e, tmp_data, y_test, group_names, group_var, datevar, interestvar;
    
    // Get variables of interest
    group_names = dynargsGet(1, "Country");
    group_var = dynargsGet(2, "cn");
    datevar = dynargsGet(3, "date2");
    interestvar = dynargsGet(4, "pct_ca_reg");
    
    // Select data for country
    e = data[., group_names] .== cname;
    
    // Get test data
    tmp_data = selif(data[., "Year" interestvar], e);
    
    // Get CAB for country
    y_test = packr(tmp_data[., "Year" interestvar]);
    
    retp(y_test);
endp;
