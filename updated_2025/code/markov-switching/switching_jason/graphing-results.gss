new;
cls;

#include code/cab_util.src

// Data loading path
fpath = "data/";
fpath_cab = "clean-data/";
fpath_probs = "code/markov-switching/switching_jason/";

// Coefficient estimates
fname_results = "ms-estimates-new.csv";
fname_cab = "reg_cab_data.csv";
fname_probs = "probs_total.fmt";

// Results saving paths
spath = "results/unit-root-tests/switch/plots/summary/";

/*
** Specify variables
*/
date_var = "Date";
group_var = "cn";
group_names = "country_name";
interest_var = "pct_cab";

/*
** Perform import
*/
// Results data
results_data = loadd(fpath$+fname_results);

// CAB data
cab_data = loadd(fpath_cab$+fname_cab);
cab_data = asdate(move(cab_data), "%Y-Q%q", date_var);

// Probabilities
filestr = fpath_probs $+ fname_probs;
loadarray probs = ^filestr;

// Get unique country codes
ccodes = unique(cab_data[., group_var]);

// Get column labels
{ cnames, keys } = getColLabels(cab_data, group_names);
N_groups = rows(cnames);

// Column labels from results
resCols = getColNames(results_data);
hypothesis_cols = startsWith(resCols, "reject");
resCols = selif(resCols, hypothesis_cols);
hypothesis = results_data[., resCols];

// Recode category data
r1_cat = zeros(rows(hypothesis), 1);
r0_cat = where(hypothesis[., 1].=="TRUE", 1, 2) + where(hypothesis[., 2].=="TRUE", 1, 0);
r1_cat = where(hypothesis[., 3].=="TRUE", 1, 2) + where(hypothesis[., 4].=="TRUE", 1, 0);

for i(1, N_groups, 1);
    
    // Load CAB series
    yt = __get_test_y(cab_data, cnames[i]);
    dates = yt[., date_var];
    yy = yt[., interest_var];
    
    // Get probabilities
    prob_i = getMatrix(probs, i);
    prob_i = delcols(prob_i, 1);
    prob_i = trimr(prob_i, 0, rows(prob_i)-rows(yy));
    
    // Select probability for phi and
    // add 0/1 indicator of regime 1
    prob_i = prob_i[., 3]~(prob_i[., 3].>0.5)~(prob_i[., 3].<=0.5);
    
    __plot_graph_pval(yy, prob_i, dates, cnames[i], results_data[i, "Phi0"], results_data[i, "Phi1"], r0_cat[i], r1_cat[i], spath); 
endfor;

proc (0) = __plot_graph_pval(y, prob, dates, cname, phi0, phi1, r0_cat, r1_cat, spath);
    
    local gr_title, plt_name, clr;
    
    plotOpenWindow();
    
    // Set up plot
    struct plotControl pctl;
    pctl = plotGetDefaults("xy");
    
    // Set up fonts
    plotSetFonts(&pctl, "axes", "Arial", 14);
    plotSetFonts(&pctl, "title", "Arial", 18);
    
    // Panel 1 title
    plotSetTitle(&pCtl, cname);
    
    // Set the y-label panel 1
    plotSetYLabel(&pctl, "CAB (% GDP)");
    
    // Line style
    plotSetLineStyle(&pctl, 1);
    plotSetLineColor(&pctl, "black");
    
    plotLayout(2, 1, 1);
    
    // Plot original series
    plotXY(pctl, dates, y);
    
    struct plotControl plt;
    // Reset plotControl to default bar settings
    plt = plotGetDefaults("bar");
    
     /*
    ** Need to set legend here to
    ** send color based on regime status
    **  Stationary:  No fill
    **  Unit root :  Orange
    **  Explosive :  Red
    */// Bar fill: solid, 15% opaque and gray
    if r0_cat == 1;
        clr = "white";
    elseif r0_cat == 2;
        clr = "orange";
    elseif r0_cat == 3;
        clr = "red";
    endif;
    plotSetFill(&plt, 1, 0.15, clr);
    if r0_cat == 1;
        plt.lineColor = "dark grey";
        plt.lineStyle = 2;
    endif;
    // Add vertical bars for regime0
    plotAddVBar(plt, dates~prob[., 3]);
    
    if r1_cat == 1;
        clr = "white";
    elseif r1_cat == 2;
        clr = "orange";
    elseif r1_cat == 3;
        clr = "red";
    endif;
    plotSetFill(&plt, 1, 0.15, clr);
    
    if r0_cat == 1;
        plt.lineColor = "dark grey";
        plt.lineStyle = 2;
    endif;
    // Add vertical bars for regime1
    prob[rows(prob), 2] = 1;
    plotAddVBar(plt, dates~prob[., 2]);
    
    // Set the left and right y-axis labels
    plotSetLineStyle(&pctl, 2);
    plotSetLineColor(&pctl, "black");
    
    // Set text interpreter
    plotSetTextInterpreter(&pctl, "latex", "title yaxis");
    plotSetYRange(&pctl, 0, 1);
    
    // Title between panels
    gr_title = "P_{S_3}, \\phi_0 =" $+ ntos(phi0, 3) $+ ", \\phi_1 =" $+ ntos(phi1, 3);
    plt_name = spath $+ cname $+ "_UR_categories.png";
    plotSetYLabel(&pctl, "P_{S_3}");
    
    plotSetTitle(&pctl, gr_title);
 
    // Plot probabilities
    plotLayout(2, 1, 2);
    plotXY(pctl, dates, prob[., 1]);
  
    pctl.lineStyle = 3;
    pctl.lineColor = "red";
    
    plotAddHLine(pctl, 0.5);
    
    // Save file
    plotSave(plt_name, 800|600, "px");
endp;


