cls;

//Change to the current directory
//chdir C:\Users\jamel\Dropbox\Latex\PROJECTS\22-11-cur-persistence\code\gauss\suppl_j_snde-2022-0014_suppl;


load yy[36, 1]= Polprices.gss;
load yx[32, 3]= probsPolp1.out;

D1a = dummy(yx[.,1], 0.5*ones(rows(yx),1));
D1 = 1-D1a[.,1];
D2a = dummy(yx[.,2], 0.5*ones(rows(yx),1));
D2 = 1-D2a[.,1];
D3a = dummy(yx[.,3], 0.5*ones(rows(yx),1));
D3 = 1-D3a[.,1];



library pgraph,optmum;



nrepl = 1000;
kk= 1;
xxx = zeros(nrepl,2);
sss = zeros(nrepl,2); 



@ parameter values @



alpha0 =  -1.852288; 
alpha1 = -1.724611; 
Sig0  =  0.010578;
phi0  =  0.173661;
aphi1 =  -0.018264;
aphi2 = -0.203951; 
aphi3 =  0.438746;    
aphi4 = -0.73047; 
Sig1 =  0.398236; 
phi1 = 0.188594;
afhi1 =  -0.721760; 
afhi2 =   0.086713; 
afhi3 = -1.477192;
afhi4 = -0.298701;

pm = 0.840434;
qm = 0.786419; 
pv = 0.284919; 
qv = 0.874291; 
pb = 0.687442;  
qb = 0.787040; 

xpm = sqrt(pm/(1-pm));
xqm = sqrt(qm/(1-qm));
xpv = sqrt(pv/(1-pv));
xqv = sqrt(qv/(1-qv));
xpb = sqrt(pb/(1-pb));
xqb = sqrt(qb/(1-qb));





yus = yy[1:5]|zeros(rows(yy)-5,1);
pas00 = (aphi1~aphi2~aphi3~aphi4);
pas11 = (afhi1~afhi2~afhi3~afhi4);


jj = 1; do while jj <= nrepl;   @ replications loop @

seeds =  987654321 +jj;

{epsilon, state} = rndn(rows(yy)-4,1, seeds);



it = 6;
do until  it > rows(yy);
yus[it,1] = yus[it-1,1] + (D1[it-5])*alpha0 + (1-D1[it-5])*alpha1 
    +(D3[it-5])*(pas00*((yus[it-1]-yus[it-2])~(yus[it-2]-yus[it-3])~(yus[it-3]-yus[it-4])~(yus[it-4]-yus[it-5]))')
    +(1-D3[it-5])*(pas11*((yus[it-1]-yus[it-2])~(yus[it-2]-yus[it-3])~(yus[it-3]-yus[it-4])~(yus[it-4]-yus[it-5]))') 
    +((D2[it-5])*Sig0 + (1-D2[it-5])*Sig1)*epsilon[it-4,1]; 
         
it = it+1;
endo;    

nnn = rows(yus);
yt = yus;  
dya = yt[2:nnn]-yt[1:nnn-1];
yu = yt[2:nnn];
na = rows(yu);

x0 = alpha0|alpha1|xpm|xqm|xpv|xqv|xpb|xqb|10*sig0|0|(pas00')|10*sig1|0|(pas11');



kc=1;

#include litter8sNEW.gss;


@ -------------------------------------------------------------------------- @
@  The following code controls the call for gauss21's maximization routine  @
@ -------------------------------------------------------------------------- @
 
optset;

#include optmum.ext;

_opalgr = 2;
_opgtol = 1.e-06;
_opstep = 2;
_opmiter = 200;
__output=0;


{x,ef,g,h} = optmum(&ofn,x0);


kc = 2;
call ofn(x);
kc = 1;





format /m0 /rd 14,6;





 
jj;

format /rd 5,4;

if maxc(x) < 15 and minc(x) > -15;
h = (hessp(&ofn,x));
call ofn(x);
if minc(eigh(h)) <= 0;
goto final;
else;
h = invpd(h);
std = sqrt(diag(h));

kk = kk+1;

xxx[jj,.] = x[10,1]~x[16,1];
sss[jj,.] = std[10,1]~std[16,1]; 

endif;

final:
endif;




jj = jj+1; endo;


xx = selif(xxx, sss[.,1] .gt 0);
ss = selif(sss, sss[.,1] .gt 0);

@save c:\gauss21\adf4s\Boot\BootPOLPrices =  xx;@
@save c:\gauss21\adf4s\Boot\SDBootPOLPrices =  ss;@
save BootPOLPrices =  xx;
save SDBootPOLPrices =  ss;

@output file = c:\gauss21\adf4s\Boot\BootPOLPrices.out reset; @
output file = BootPOLPrices.out reset; 

format /m1 /rd 5,4;
xx;
output off;

  
@output file = c:\gauss21\adf4s\Boot\SDBootPOLPrices.out reset; @
output file = SDBootPOLPrices.out reset; 
format /m1 /rd 5,4;
ss;
output off;

kk;

TBoot0 = xx[.,1]./ss[.,1];
TBoot1 = xx[.,2]./ss[.,2];


Ttestphi0 = 49.258805; 

Ttestphi1 =  51.797834;

Pboot0 = meanc(dummy(Tboot0, Ttestphi0));

Pboot1 = meanc(dummy(Tboot1, Ttestphi1));

"Boot pvalue phi0 = ";;Pboot0; 
"Boot pvalue phi1 = ";;Pboot1; 

